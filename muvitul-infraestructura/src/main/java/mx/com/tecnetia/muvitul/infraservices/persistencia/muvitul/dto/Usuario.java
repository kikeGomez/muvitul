package mx.com.tecnetia.muvitul.infraservices.persistencia.muvitul.dto;
// Generated 9/01/2017 07:06:09 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario"
    ,catalog="muvitul"
)
public class Usuario  implements java.io.Serializable {


     private Integer idUsuario;
     private EstatusUsuario estatusUsuario;
     private String nombre;
     private String paterno;
     private String materno;
     private String correo;
     private String contrasenia;
     private String foto;
     private Set<Perfil> perfils = new HashSet<Perfil>(0);
     private Set<AutorizacionMovimiento> autorizacionMovimientos = new HashSet<AutorizacionMovimiento>(0);
     private Set<CancelacionPago> cancelacionPagos = new HashSet<CancelacionPago>(0);
     private Set<TicketVenta> ticketVentas = new HashSet<TicketVenta>(0);
     private Set<MovimientoInventario> movimientoInventarios = new HashSet<MovimientoInventario>(0);
     private Set<Cine> cines = new HashSet<Cine>(0);

    public Usuario() {
    }

	
    public Usuario(EstatusUsuario estatusUsuario, String nombre, String paterno, String correo, String contrasenia) {
        this.estatusUsuario = estatusUsuario;
        this.nombre = nombre;
        this.paterno = paterno;
        this.correo = correo;
        this.contrasenia = contrasenia;
    }
    public Usuario(EstatusUsuario estatusUsuario, String nombre, String paterno, String materno, String correo, String contrasenia, String foto, Set<Perfil> perfils, Set<AutorizacionMovimiento> autorizacionMovimientos, Set<CancelacionPago> cancelacionPagos, Set<TicketVenta> ticketVentas, Set<MovimientoInventario> movimientoInventarios, Set<Cine> cines) {
       this.estatusUsuario = estatusUsuario;
       this.nombre = nombre;
       this.paterno = paterno;
       this.materno = materno;
       this.correo = correo;
       this.contrasenia = contrasenia;
       this.foto = foto;
       this.perfils = perfils;
       this.autorizacionMovimientos = autorizacionMovimientos;
       this.cancelacionPagos = cancelacionPagos;
       this.ticketVentas = ticketVentas;
       this.movimientoInventarios = movimientoInventarios;
       this.cines = cines;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id_usuario", unique=true, nullable=false)
    public Integer getIdUsuario() {
        return this.idUsuario;
    }
    
    public void setIdUsuario(Integer idUsuario) {
        this.idUsuario = idUsuario;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_estatus_usuario", nullable=false)
    public EstatusUsuario getEstatusUsuario() {
        return this.estatusUsuario;
    }
    
    public void setEstatusUsuario(EstatusUsuario estatusUsuario) {
        this.estatusUsuario = estatusUsuario;
    }
    
    @Column(name="nombre", nullable=false, length=60)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
    
    @Column(name="paterno", nullable=false, length=50)
    public String getPaterno() {
        return this.paterno;
    }
    
    public void setPaterno(String paterno) {
        this.paterno = paterno;
    }
    
    @Column(name="materno", length=50)
    public String getMaterno() {
        return this.materno;
    }
    
    public void setMaterno(String materno) {
        this.materno = materno;
    }
    
    @Column(name="correo", nullable=false, length=45)
    public String getCorreo() {
        return this.correo;
    }
    
    public void setCorreo(String correo) {
        this.correo = correo;
    }
    
    @Column(name="contrasenia", nullable=false, length=45)
    public String getContrasenia() {
        return this.contrasenia;
    }
    
    public void setContrasenia(String contrasenia) {
        this.contrasenia = contrasenia;
    }
    
    @Column(name="foto", length=45)
    public String getFoto() {
        return this.foto;
    }
    
    public void setFoto(String foto) {
        this.foto = foto;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="perfiles_x_usuario", catalog="muvitul", joinColumns = { 
        @JoinColumn(name="id_usuario", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="id_perfil", nullable=false, updatable=false) })
    public Set<Perfil> getPerfils() {
        return this.perfils;
    }
    
    public void setPerfils(Set<Perfil> perfils) {
        this.perfils = perfils;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<AutorizacionMovimiento> getAutorizacionMovimientos() {
        return this.autorizacionMovimientos;
    }
    
    public void setAutorizacionMovimientos(Set<AutorizacionMovimiento> autorizacionMovimientos) {
        this.autorizacionMovimientos = autorizacionMovimientos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<CancelacionPago> getCancelacionPagos() {
        return this.cancelacionPagos;
    }
    
    public void setCancelacionPagos(Set<CancelacionPago> cancelacionPagos) {
        this.cancelacionPagos = cancelacionPagos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<TicketVenta> getTicketVentas() {
        return this.ticketVentas;
    }
    
    public void setTicketVentas(Set<TicketVenta> ticketVentas) {
        this.ticketVentas = ticketVentas;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<MovimientoInventario> getMovimientoInventarios() {
        return this.movimientoInventarios;
    }
    
    public void setMovimientoInventarios(Set<MovimientoInventario> movimientoInventarios) {
        this.movimientoInventarios = movimientoInventarios;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuarios")
    public Set<Cine> getCines() {
        return this.cines;
    }
    
    public void setCines(Set<Cine> cines) {
        this.cines = cines;
    }




}


