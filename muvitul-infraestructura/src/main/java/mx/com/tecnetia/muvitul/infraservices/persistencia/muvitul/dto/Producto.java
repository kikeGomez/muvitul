package mx.com.tecnetia.muvitul.infraservices.persistencia.muvitul.dto;
// Generated 2/03/2017 11:59:13 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Producto generated by hbm2java
 */
@Entity
@Table(name = "producto", catalog = "muvitul")
public class Producto implements java.io.Serializable {

	private Integer idProducto;
	private Cine cine;
	private String nombre;
	private byte[] icono;
	private boolean activo;
	private Set<ProductosXPaquete> productosXPaquetes = new HashSet<ProductosXPaquete>(0);
	private Set<PrecioXProducto> precioXProductos = new HashSet<PrecioXProducto>(0);
	private Set<ProductosXTicket> productosXTickets = new HashSet<ProductosXTicket>(0);
	private Set<DetallePromocion> detallePromocions = new HashSet<DetallePromocion>(0);
	private Set<PuntoVenta> puntoVentas = new HashSet<PuntoVenta>(0);
	private Set<ArticulosXProducto> articulosXProductos = new HashSet<ArticulosXProducto>(0);
	private Set<ImpuestoXProducto> impuestoXProductos = new HashSet<ImpuestoXProducto>(0);

	public Producto() {
	}

	public Producto(Cine cine, String nombre, byte[] icono, boolean activo) {
		this.cine = cine;
		this.nombre = nombre;
		this.icono = icono;
		this.activo = activo;
	}

	public Producto(Cine cine, String nombre, byte[] icono, boolean activo, Set<ProductosXPaquete> productosXPaquetes,
			Set<PrecioXProducto> precioXProductos, Set<ProductosXTicket> productosXTickets,
			Set<DetallePromocion> detallePromocions, Set<PuntoVenta> puntoVentas,
			Set<ArticulosXProducto> articulosXProductos, Set<ImpuestoXProducto> impuestoXProductos) {
		this.cine = cine;
		this.nombre = nombre;
		this.icono = icono;
		this.activo = activo;
		this.productosXPaquetes = productosXPaquetes;
		this.precioXProductos = precioXProductos;
		this.productosXTickets = productosXTickets;
		this.detallePromocions = detallePromocions;
		this.puntoVentas = puntoVentas;
		this.articulosXProductos = articulosXProductos;
		this.impuestoXProductos = impuestoXProductos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_producto", unique = true, nullable = false)
	public Integer getIdProducto() {
		return this.idProducto;
	}

	public void setIdProducto(Integer idProducto) {
		this.idProducto = idProducto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_Cine", nullable = false)
	public Cine getCine() {
		return this.cine;
	}

	public void setCine(Cine cine) {
		this.cine = cine;
	}

	@Column(name = "nombre", nullable = false, length = 200)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "icono", nullable = false)
	public byte[] getIcono() {
		return this.icono;
	}

	public void setIcono(byte[] icono) {
		this.icono = icono;
	}

	@Column(name = "activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ProductosXPaquete> getProductosXPaquetes() {
		return this.productosXPaquetes;
	}

	public void setProductosXPaquetes(Set<ProductosXPaquete> productosXPaquetes) {
		this.productosXPaquetes = productosXPaquetes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<PrecioXProducto> getPrecioXProductos() {
		return this.precioXProductos;
	}

	public void setPrecioXProductos(Set<PrecioXProducto> precioXProductos) {
		this.precioXProductos = precioXProductos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ProductosXTicket> getProductosXTickets() {
		return this.productosXTickets;
	}

	public void setProductosXTickets(Set<ProductosXTicket> productosXTickets) {
		this.productosXTickets = productosXTickets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<DetallePromocion> getDetallePromocions() {
		return this.detallePromocions;
	}

	public void setDetallePromocions(Set<DetallePromocion> detallePromocions) {
		this.detallePromocions = detallePromocions;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "productos")
	public Set<PuntoVenta> getPuntoVentas() {
		return this.puntoVentas;
	}

	public void setPuntoVentas(Set<PuntoVenta> puntoVentas) {
		this.puntoVentas = puntoVentas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ArticulosXProducto> getArticulosXProductos() {
		return this.articulosXProductos;
	}

	public void setArticulosXProductos(Set<ArticulosXProducto> articulosXProductos) {
		this.articulosXProductos = articulosXProductos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ImpuestoXProducto> getImpuestoXProductos() {
		return this.impuestoXProductos;
	}

	public void setImpuestoXProductos(Set<ImpuestoXProducto> impuestoXProductos) {
		this.impuestoXProductos = impuestoXProductos;
	}

}
