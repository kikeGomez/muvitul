package mx.com.tecnetia.muvitul.infraservices.persistencia.muvitul.dto;
// Generated 9/01/2017 07:06:09 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Cine generated by hbm2java
 */
@Entity
@Table(name="cine"
    ,catalog="muvitul"
)
public class Cine  implements java.io.Serializable {


     private Integer idCine;
     private Contacto contacto;
     private Empresa empresa;
     private String nombre;
     private boolean activo;
     private Set<Pelicula> peliculas = new HashSet<Pelicula>(0);
     private Set<Formato> formatos = new HashSet<Formato>(0);
     private Set<MateriaPrima> materiaPrimas = new HashSet<MateriaPrima>(0);
     private Set<Sala> salas = new HashSet<Sala>(0);
     private Set<Usuario> usuarios = new HashSet<Usuario>(0);
     private Set<PuntoVenta> puntoVentas = new HashSet<PuntoVenta>(0);

    public Cine() {
    }

	
    public Cine(Contacto contacto, Empresa empresa, String nombre, boolean activo) {
        this.contacto = contacto;
        this.empresa = empresa;
        this.nombre = nombre;
        this.activo = activo;
    }
    public Cine(Contacto contacto, Empresa empresa, String nombre, boolean activo, Set<Pelicula> peliculas, Set<Formato> formatos, Set<MateriaPrima> materiaPrimas, Set<Sala> salas, Set<Usuario> usuarios, Set<PuntoVenta> puntoVentas) {
       this.contacto = contacto;
       this.empresa = empresa;
       this.nombre = nombre;
       this.activo = activo;
       this.peliculas = peliculas;
       this.formatos = formatos;
       this.materiaPrimas = materiaPrimas;
       this.salas = salas;
       this.usuarios = usuarios;
       this.puntoVentas = puntoVentas;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id_cine", unique=true, nullable=false)
    public Integer getIdCine() {
        return this.idCine;
    }
    
    public void setIdCine(Integer idCine) {
        this.idCine = idCine;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_contacto", nullable=false)
    public Contacto getContacto() {
        return this.contacto;
    }
    
    public void setContacto(Contacto contacto) {
        this.contacto = contacto;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_empresa", nullable=false)
    public Empresa getEmpresa() {
        return this.empresa;
    }
    
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }
    
    @Column(name="nombre", nullable=false, length=45)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
    
    @Column(name="activo", nullable=false)
    public boolean isActivo() {
        return this.activo;
    }
    
    public void setActivo(boolean activo) {
        this.activo = activo;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="cine")
    public Set<Pelicula> getPeliculas() {
        return this.peliculas;
    }
    
    public void setPeliculas(Set<Pelicula> peliculas) {
        this.peliculas = peliculas;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="cine")
    public Set<Formato> getFormatos() {
        return this.formatos;
    }
    
    public void setFormatos(Set<Formato> formatos) {
        this.formatos = formatos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="cine")
    public Set<MateriaPrima> getMateriaPrimas() {
        return this.materiaPrimas;
    }
    
    public void setMateriaPrimas(Set<MateriaPrima> materiaPrimas) {
        this.materiaPrimas = materiaPrimas;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="cine")
    public Set<Sala> getSalas() {
        return this.salas;
    }
    
    public void setSalas(Set<Sala> salas) {
        this.salas = salas;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="usuarios_x_cine", catalog="muvitul", joinColumns = { 
        @JoinColumn(name="id_cine", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="id_usuario", nullable=false, updatable=false) })
    public Set<Usuario> getUsuarios() {
        return this.usuarios;
    }
    
    public void setUsuarios(Set<Usuario> usuarios) {
        this.usuarios = usuarios;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="cine")
    public Set<PuntoVenta> getPuntoVentas() {
        return this.puntoVentas;
    }
    
    public void setPuntoVentas(Set<PuntoVenta> puntoVentas) {
        this.puntoVentas = puntoVentas;
    }




}


